---
// Array of testimonial images from Pexels
const testimonialImages = [
  "https://img.webniaga.my/Idolbrandz/idolbrandz.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz1.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz2.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz3.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz4.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz5.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz6.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz7.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz8.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz9.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz10.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz11.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz12.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz13.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz14.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz15.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz16.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz17.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz18.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz19.jpg",
  "https://img.webniaga.my/Idolbrandz/idolbrandz20.jpg",
];
---

<section id="testimonials" class="py-20 bg-white">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-16">
      <h2 class="text-3xl md:text-4xl font-inter font-bold text-gray-900">Testimoni Pelanggan</h2>
      <div class="w-20 h-1 bg-primary-600 mx-auto mt-4 mb-6"></div>
      <p class="max-w-2xl mx-auto text-gray-600">
        Lihat bagaimana kami membantu perniagaan mencapai kejayaan dalam pengiklanan digital.
      </p>
    </div>
    
    <!-- Testimonial Images Slideshow -->
    <div class="mt-16 animate-on-scroll fade-in">
      <div class="relative">
        <div class="client-logo-carousel overflow-hidden">
          <div class="client-logo-track flex transition-transform duration-500 ease-in-out">
            {testimonialImages.map((image, index) => (
              <div class="client-logo-slide flex-shrink-0 px-2">
                <img 
                  src={image}
                  alt={`Testimonial Image ${index + 1}`}
                  class="w-full max-h-96 object-contain rounded-lg shadow-md hover:shadow-xl transition-all duration-300 cursor-pointer"
                  loading="lazy"
                  onclick={`openLightbox(${index})`}
                />
              </div>
            ))}
          </div>
        </div>
        
        <!-- Image Slideshow Navigation Buttons -->
        <button class="absolute top-1/2 -left-4 transform -translate-y-1/2 bg-white rounded-full p-2 shadow-md focus:outline-none z-10 client-prev-button">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
          </svg>
        </button>
        <button class="absolute top-1/2 -right-4 transform -translate-y-1/2 bg-white rounded-full p-2 shadow-md focus:outline-none z-10 client-next-button">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Lightbox -->
  <div id="lightbox" class="fixed inset-0 bg-black bg-opacity-90 hidden items-center justify-center z-50">
    <button id="lightbox-close" class="absolute top-4 right-4 text-white hover:text-gray-300 focus:outline-none">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>
    
    <button id="lightbox-prev" class="absolute left-4 top-1/2 transform -translate-y-1/2 text-white hover:text-gray-300 focus:outline-none">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
      </svg>
    </button>
    
    <img id="lightbox-image" src="" alt="Lightbox image" class="max-h-[90vh] max-w-[90vw] object-contain" />
    
    <button id="lightbox-next" class="absolute right-4 top-1/2 transform -translate-y-1/2 text-white hover:text-gray-300 focus:outline-none">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
      </svg>
    </button>
  </div>
</section>

<script define:vars={{ testimonialImages }}>
  document.addEventListener('DOMContentLoaded', () => {
    // Image Slideshow
    const clientTrack = document.querySelector('.client-logo-track');
    const clientSlides = document.querySelectorAll('.client-logo-slide');
    const clientNextButton = document.querySelector('.client-next-button');
    const clientPrevButton = document.querySelector('.client-prev-button');
    
    if (!clientTrack || !clientSlides.length || !clientNextButton || !clientPrevButton) return;
    
    let clientCurrentIndex = 0;
    const clientSlideWidth = 100; // percentage
    const totalClientSlides = clientSlides.length;
    let clientSlidesToShow = 3;
    
    const updateClientSlidesToShow = () => {
      if (window.innerWidth >= 1024) {
        clientSlidesToShow = 3;
      } else if (window.innerWidth >= 768) {
        clientSlidesToShow = 2;
      } else {
        clientSlidesToShow = 1;
      }
    };
    
    const updateClientSlidePosition = () => {
      if (!clientTrack) return;
      const offset = -clientCurrentIndex * (clientSlideWidth / clientSlidesToShow);
      clientTrack.style.transform = `translateX(${offset}%)`;
    };
    
    const clientNextSlide = () => {
      const maxIndex = totalClientSlides - clientSlidesToShow;
      clientCurrentIndex = clientCurrentIndex >= maxIndex ? 0 : clientCurrentIndex + 1;
      updateClientSlidePosition();
    };
    
    const clientPrevSlide = () => {
      const maxIndex = totalClientSlides - clientSlidesToShow;
      clientCurrentIndex = clientCurrentIndex <= 0 ? maxIndex : clientCurrentIndex - 1;
      updateClientSlidePosition();
    };
    
    clientNextButton.addEventListener('click', clientNextSlide);
    clientPrevButton.addEventListener('click', clientPrevSlide);
    
    // Lightbox functionality
    const lightbox = document.getElementById('lightbox');
    const lightboxImage = document.getElementById('lightbox-image');
    const lightboxClose = document.getElementById('lightbox-close');
    const lightboxPrev = document.getElementById('lightbox-prev');
    const lightboxNext = document.getElementById('lightbox-next');
    let currentImageIndex = 0;

    // Make openLightbox available globally
    window.openLightbox = (index) => {
      currentImageIndex = index;
      updateLightboxImage();
      lightbox.classList.remove('hidden');
      lightbox.classList.add('flex');
      document.body.style.overflow = 'hidden';
    };

    const closeLightbox = () => {
      lightbox.classList.add('hidden');
      lightbox.classList.remove('flex');
      document.body.style.overflow = '';
    };

    const updateLightboxImage = () => {
      lightboxImage.src = testimonialImages[currentImageIndex];
      lightboxImage.alt = `Testimonial Image ${currentImageIndex + 1}`;
    };

    const showNextImage = () => {
      currentImageIndex = (currentImageIndex + 1) % testimonialImages.length;
      updateLightboxImage();
    };

    const showPrevImage = () => {
      currentImageIndex = (currentImageIndex - 1 + testimonialImages.length) % testimonialImages.length;
      updateLightboxImage();
    };

    // Event listeners for lightbox controls
    lightboxClose.addEventListener('click', closeLightbox);
    lightboxNext.addEventListener('click', showNextImage);
    lightboxPrev.addEventListener('click', showPrevImage);
    lightbox.addEventListener('click', (e) => {
      if (e.target === lightbox) {
        closeLightbox();
      }
    });

    // Keyboard navigation
    document.addEventListener('keydown', (e) => {
      if (!lightbox.classList.contains('hidden')) {
        if (e.key === 'Escape') closeLightbox();
        if (e.key === 'ArrowRight') showNextImage();
        if (e.key === 'ArrowLeft') showPrevImage();
      }
    });
    
    // Handle window resize for carousel
    window.addEventListener('resize', () => {
      updateClientSlidesToShow();
      updateClientSlidePosition();
    });
    
    // Initialize carousel
    updateClientSlidesToShow();
    updateClientSlidePosition();
    
    // Auto slide for carousel
    setInterval(clientNextSlide, 3000);
  });
</script>

<style>
  .client-logo-carousel {
    position: relative;
    width: 100%;
    overflow: hidden;
  }

  .client-logo-track {
    display: flex;
    transition: transform 0.5s ease-in-out;
  }

  .client-logo-slide {
    width: calc(100% / 3);
  }

  @media (max-width: 1024px) {
    .client-logo-slide {
      width: calc(100% / 2);
    }
  }

  @media (max-width: 768px) {
    .client-logo-slide {
      width: 100%;
    }
  }

  /* Lightbox styles */
  #lightbox {
    transition: opacity 0.3s ease-in-out;
  }

  #lightbox-image {
    transition: transform 0.3s ease-in-out;
  }

  #lightbox button {
    transition: opacity 0.2s ease-in-out;
  }

  #lightbox button:hover {
    opacity: 0.8;
  }
</style>